\glsdefs@newdocentry{api}%
{%
name={\acronymfont {\glsentryshort {api}}},%
sort={API},%
type={acronym},%
first={API},%
firstplural={APIs},%
text={API},%
plural={APIs},%
description={\glslink {apig}{Application Program Interface}},%
descriptionplural={\glslink {apig}{Application Program Interface}},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={Application Program Interface},%
longplural={Application Program Interfaces},%
short={API},%
shortplural={APIs},%
counter={page},%
parent={},%
%
}%

\glsdefs@newdocentry{uml}%
{%
name={\acronymfont {\glsentryshort {uml}}},%
sort={UML},%
type={acronym},%
first={UML},%
firstplural={UMLs},%
text={UML},%
plural={UMLs},%
description={\glslink {umlg}{Unified Modeling Language}},%
descriptionplural={\glslink {umlg}{Unified Modeling Language}},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={Unified Modeling Language},%
longplural={Unified Modeling Languages},%
short={UML},%
shortplural={UMLs},%
counter={page},%
parent={},%
%
}%

\glsdefs@newdocentry{apig}%
{%
name={\glslink {api}{API}},%
sort={api},%
type={main},%
first={Application Program Interface},%
firstplural={Application Program Interfaces},%
text={Application Program Interface},%
plural={Application Program Interfaces},%
description={in informatica con il termine \emph {Application Programming Interface API} (ing. interfaccia di programmazione di un'applicazione) si indica ogni insieme di procedure disponibili al programmatore, di solito raggruppate a formare un set di strumenti specifici per l'espletamento di un determinato compito all'interno di un certo programma. La finalità è ottenere un'astrazione, di solito tra l'hardware e il programmatore o tra software a basso e quello ad alto livello semplificando così il lavoro di programmazione},%
descriptionplural={in informatica con il termine \emph {Application Programming Interface API} (ing. interfaccia di programmazione di un'applicazione) si indica ogni insieme di procedure disponibili al programmatore, di solito raggruppate a formare un set di strumenti specifici per l'espletamento di un determinato compito all'interno di un certo programma. La finalità è ottenere un'astrazione, di solito tra l'hardware e il programmatore o tra software a basso e quello ad alto livello semplificando così il lavoro di programmazione},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%

\glsdefs@newdocentry{umlg}%
{%
name={\glslink {uml}{UML}},%
sort={uml},%
type={main},%
first={UML},%
firstplural={UMLs},%
text={UML},%
plural={UMLs},%
description={in ingegneria del software \emph {UML, Unified Modeling Language} (ing. linguaggio di modellazione unificato) è un linguaggio di modellazione e specifica basato sul paradigma object-oriented. L'\emph {UML} svolge un'importantissima funzione di ``lingua franca'' nella comunità della progettazione e programmazione a oggetti. Gran parte della letteratura di settore usa tale linguaggio per descrivere soluzioni analitiche e progettuali in modo sintetico e comprensibile a un vasto pubblico},%
descriptionplural={in ingegneria del software \emph {UML, Unified Modeling Language} (ing. linguaggio di modellazione unificato) è un linguaggio di modellazione e specifica basato sul paradigma object-oriented. L'\emph {UML} svolge un'importantissima funzione di ``lingua franca'' nella comunità della progettazione e programmazione a oggetti. Gran parte della letteratura di settore usa tale linguaggio per descrivere soluzioni analitiche e progettuali in modo sintetico e comprensibile a un vasto pubblico},%
symbol={\relax },%
symbolplural={\relax },%
user1={},%
user2={},%
user3={},%
user4={},%
user5={},%
user6={},%
long={},%
longplural={},%
short={},%
shortplural={},%
counter={page},%
parent={},%
%
}%

